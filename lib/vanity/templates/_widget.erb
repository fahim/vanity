<div id="widget_<%= widget.id.gsub('.', '_') %>" class="widget">
  <h3><%=vanity_h widget.name %></h3>

  <%
    data_points = []
    widget.metrics.each do |metric_id, metric_options|
      data = Vanity::Metric.data(metric_options[:metric])
  	  #min, max = data.map(&:last).minmax
  	  sum = data.map(&:last).sum
  	  
   	  js = data.map { |date,value| "['#{date.to_time.httpdate}',#{value}]" }.join(",")
  	  data_points << [metric_options, js, sum]
    end

    data_points.sort_by!(&:last)
    total = data_points.select { |point| point.first[:options][:y_axis] == 1 }.map(&:last).sum
  %>
  <div class="chart"></div>
  <div class="legend"></div>

  <script type="text/javascript">
  $(function(){
  	Vanity.ci_widget("<%= widget.id.gsub('.', '_') %>").plot(
  		[
  		 <% data_points.each_with_index do |data_point, index| %>
  			 <% metric_options, js, sum = data_point %>
  		   <% percentage = sum / total * 100 %>
  			 {
  			  <% label_name = metric_options[:metric].name.to_s + (metric_options[:options][:y_axis] == 2 ? " (Right Y-Axis)" : " (#{number_to_percentage(percentage)})") %>
  				label:"<%= label_name %> â€“ <%= number_with_delimiter sum %>", 
  				data: [<%= js %>], 
  				yaxis: <%= metric_options[:options][:y_axis] || 1 %>,
  				color: '<%= cycle("red", "green", "orange", "purple", "cyan") %>'
  			 },
  		<% end %>
  		]
  	)
  })
  </script>
</div>
<%= widget.options.inspect %>
<script type="text/javascript">
Vanity.ci_widget = function(id) {      
var metric = {};
metric.chart = $("#widget_" + id + " .chart");
metric.chart.height(metric.chart.width() / 3);
metric.markings = [];
metric.options = {
  xaxis:  { mode: "time", minTickSize: [7, "day"] },
  series: { lines: { show: true, lineWidth: 2, fill: false },
            points: { show: false, radius: 1 }, shadowSize: 0,
            stack: <%= widget.options[:stack] ? "1" : "null" %> },
  colors: ["#0077CC"],
  legend: { position: 'sw', container: "#widget_" + id +" .legend", backgroundOpacity: 0.5 },
  grid:   { markings: metric.markings, borderWidth: 1, borderColor: '#eee', hoverable: true, aboveData: true } };

metric.plot = function(lines) {
  $.each(lines, function(i, line) {
    $.each(line.data, function(i, pair) { pair[0] = Date.parse(pair[0]) })
  });
  console.log(lines)

  var plot = $.plot(metric.chart, lines, metric.options);
  metric.chart.bind("plothover", Vanity.tooltip);
  metric.chart.data('plot', plot);
}
return metric;
}
</script>

<% reset_cycle %>
